import{createContext as r,useContext as t,useMemo as n,useState as e,useEffect as o}from"react";import s from"swr";const u=(r,t)=>[r,t],c=r(null),a=()=>{const r=t(c);if(!r)throw new Error("supabase client instance required");return r},i=(r,t,e)=>n(()=>u(r,t),e);function l(r){const t=a();return n(()=>function(r,t){return async(n,e)=>{const o=r.from(n).select(e.columns,{count:e.count,head:e.head}),s="function"==typeof e.filter?e.filter(o):o;switch(t){default:case"multiple":return s.throwOnError();case"single":return s.throwOnError().single();case"maybeSingle":return s.throwOnError().maybeSigle();case"csv":return s.throwOnError().csv()}}}(t,r),[t,r])}const h=(r,t)=>{const n=l("multiple");return s(r,n,t)},f=(r,t)=>{const n=l("single");return s(r,n,t)},m=(r,t)=>{const n=l("maybeSingle");return s(r,n,t)},w=()=>{const r=a(),[t,n]=e(r.auth.session());return o(()=>{const{data:t}=r.auth.onAuthStateChange((r,t)=>{n(t)});return()=>t.unsubscribe()},[n,r]),t};export{c as SwrSupabaseContext,u as createQuery,a as useClient,i as useQuery,h as useSelect,m as useSelectMaybeSingle,f as useSelectSingle,w as useSession};
//# sourceMappingURL=index.modern.js.map
